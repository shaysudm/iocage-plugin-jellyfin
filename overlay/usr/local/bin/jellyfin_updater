#!/usr/bin/env python3.9

import json
import os
import urllib.request
import subprocess
import sys

from subprocess import run, PIPE
from os import path

# Global configuration
githubUrl = 'https://api.github.com/repos/Thefrank/jellyfin-server-freebsd/releases/latest'

tmpfile = '/tmp/jellyfinserver.pkg'
markerfile = '/usr/local/etc/jellyfinserver.version'
# Global configuration

# Global Json Buffer
js = None
# Global Json Buffer

def ReadFile(path):
  f = open(path, 'r')
  v = f.read().replace('v', '').strip()
  f.close()
  return v

def CompareVersion(v1, v2):
  return v1 == v2

def InitGitHubJsObject():
  global js
  response = urllib.request.urlopen(githubUrl)
  html = response.read()
  response.close()
  js = json.loads(html)

def GetPkgUrlFromJS():
  url = None
  for item in js['assets']:
    if '.pkg' in item['name']:
      url = item['browser_download_url']
      break
  return url

def GetLastestVersionJS():
  return js['tag_name'].replace('v', '').strip()

def DownloadFile(url, path):
  if not FileExists(path):
    print('Downloading jellyfinserver... ', end='')
    urllib.request.urlretrieve(url, filename=path)
    if not FileExists(path):
      print('failed.')
      raise Exception('Download failed : ', url)
    else:
      print('done.')

def UpdatePresent():
  v1 = ReadFile(markerfile)
  v2 = GetLastestVersionJS()
  return not CompareVersion(v1, v2)

def FileExists(file):
  return path.exists(file)

def RemoveFile(file):
  if FileExists(file):
    os.remove(file)

def PackageInstalled():
  return FileExists(markerfile)

def StartStopService(action):
  print('service ' + action + ' jellyfinserver... ', end='')
  RunCommand(['service', action, 'jellyfinserver'])
  print('done.')

def StopService():
  StartStopService('stop')

def StartService():
  StartStopService('start')

def CreateMarkerFile(version):
  f = open(markerfile, 'w')
  f.write(version)
  f.close()

def InstallPackage(pkg):
  print('Installing Jellyfinserver... ', end='')
  RunCommand(['pkg', 'install', '-y', pkg])
  print('done.')

def InstallService():
  url = GetPkgUrlFromJS()

  if not url == None:
    DownloadFile(url, tmpfile)
    InstallPackage(tmpfile)
    CreateMarkerFile(GetLastestVersionJS())
    RemoveFile(tmpfile)
  else:
    print('Could not get download link from github.')
    raise Exception('Failed to get GitHub url...')

def RunCommand(args):
  subprocess.run(args, check=True, stdout=subprocess.DEVNULL) # check with no output

def UpdateService():
  StopService()
  InstallService()
  StartService()

def InstallOrUpdate():
  InitGitHubJsObject()
  vInstall = 0
  vUpdate = 0

  if PackageInstalled():
    if UpdatePresent():
      vUpdate = 1
  else:
    vInstall = 1

  if vUpdate:
    print('Jellyfin is installed and out of date... Updating.')
    UpdateService()
  elif vInstall == 1:
    print('Jellyfin is not installed... installing.')
    InstallService()
  else:
    print('Jellyfin is installed and up to date.')

# Main
print('Message from jellyfin_updater:\n\n--\n')
InstallOrUpdate()
print('\n=====')
